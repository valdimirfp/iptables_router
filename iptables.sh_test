#!/bin/bash
#Настроим iptables
#Сбросим старые настройки
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X

#дропаем все по умолчанию
iptables -P INPUT  DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

#разрешаем межблочный обмен на локал хост
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

#открываем SSH - открытие для
iptables -A INPUT -p tcp -s 0.0.0.0/0 --dport=22 -j ACCEPT

#Разрешить только те пакеты, которые мы запросили:
iptables -I INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -I OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -I FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT



iptables -A FORWARD -i enp0s8 -o enp0s3 -s 172.16.11.0/24 -p udp --dport 53 -j ACCEPT
for private_ip in $(cat private_ip.list)
do
iptables -A FORWARD -i enp0s8 -o enp0s3 ! -s $private_ip -j DROP
done


#открываем SSH
iptables -A INPUT -p tcp -s 0.0.0.0/0 --dport=22 -j ACCEPT

# открываем входящте запросы
iptables -A INPUT -p tcp -s 0.0.0.0/0 --dport=1443 -j ACCEPT
iptables -A INPUT -p tcp -s 0.0.0.0/0 --dport=81 -j ACCEPT

# разрешения для k8s
iptables -A INPUT -p tcp -s 172.16.11.0/24 -j ACCEPT
iptables -A OUTPUT -p tcp -s 172.16.11.0/24 -j ACCEPT
iptables -A INPUT -p tcp -s 10.0.0.0/8 -j ACCEPT

# разрешаем внутреннем хостам выходи на ружу
iptables -A FORWARD -i enp0s8 -p tcp --match multiport --dport 443,80,22 -j ACCEPT
iptables -A FORWARD -i enp0s8 -s 172.16.11.0/24 -p tcp -j LOG --log-prefix "IPtablesDROP - " --log-level 1
iptables -A FORWARD -i enp0s8 -s 172.16.11.0/24 -p tcp -j DROP

#Разрешаем исходящие соединения из локальной сети к интернет-хостам
iptables -A FORWARD -m conntrack --ctstate NEW -i enp0s8 -s 172.16.11.0/24 -j ACCEPT

#пробросим NAT
iptables -t nat -A POSTROUTING -o enp0s3 -j MASQUERADE

#проброс внутрь SSH
# k8s
iptables -t nat -A PREROUTING -p tcp -s 0.0.0.0/0 --dport 2443 -j DNAT --to-destination 172.16.11.1:6443
iptables -A FORWARD -p tcp -d 172.16.11.1 --dport 6443 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

iptables -t nat -A PREROUTING -p tcp -s 0.0.0.0/0 --dport 8081 -j DNAT --to-destination 172.16.11.1:81
iptables -A FORWARD -p tcp -d 172.16.11.1 --dport 81 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT


#Docker-1
iptables -t nat -A PREROUTING -p tcp -s 0.0.0.0/0 --dport 2201 -j DNAT --to-destination 172.16.11.1:22
iptables -A FORWARD -p tcp -d 172.16.11.1 --dport 22 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

#Docker-2
iptables -t nat -A PREROUTING -p tcp -s 0.0.0.0/0 --dport 2202 -j DNAT --to-destination 172.16.11.2:22
iptables -A FORWARD -p tcp -d 172.16.11.2 --dport 22 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

#Docker-3
iptables -t nat -A PREROUTING -p tcp -s 0.0.0.0/0 --dport 2203 -j DNAT --to-destination 172.16.11.3:22
iptables -A FORWARD -p tcp -d 172.16.11.3 --dport 22 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT


#Kali_11_12
iptables -t nat -A PREROUTING -p tcp -s 0.0.0.0/0 --dport 2204 -j DNAT --to-destination 172.16.11.200:22
iptables -A FORWARD -p tcp -d 172.16.11.200 --dport 22 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT


#пишем в лог все дропы
iptables -N LOGGING
iptables -A INPUT -j LOGGING
iptables -A LOGGING -m limit --limit 2/min -j LOG --log-prefix "IPTables-Dropped: " --log-level 4
iptables -A LOGGING -j DROP

## NEW Reject Forwarding  traffic
iptables -A OUTPUT -j REJECT
iptables -A FORWARD -j REJECT


# save config
iptables-save > /etc/iptables.rules
#sudo /sbin/iptables-save > /etc/iptables/rules.v4
echo "iptables rules complete"
